Extension=window.Extension||{},Extension.Application=Marionette.Application.extend({initialize:function(){var a=this;Marionette.Behaviors.behaviorsLookup=function(){return a.Behaviors},a.parameters=new Backbone.Model,a.on("stop",function(){a.parameters.clear()})},setParameter:function(a,b){this.parameters.set(a,b)},getParameter:function(a){return this.parameters.get(a)}}),Extension=window.Extension||{},Extension.LayoutView=Marionette.LayoutView.extend({preventHashChange:function(a){var b=$(a.currentTarget);_.string.startsWith(b.attr("href"),"#")&&a.preventDefault()},openModal:function(a,b){var c=this;this.modal.show(a),$.magnificPopup.open(_.defaults({},b,{items:{src:this.modal.$el,type:"inline"},midClick:!0,callbacks:{open:function(){c.modal.$el.on("click",".mfp-close, .mfp-inline-close",function(){App.layout.closeModal()}),c.modal.$el.on("click","a[href]",function(a){c.preventHashChange(a)})},close:function(){a.destroy()}}}))},closeModal:function(a){(!a||this.modal.currentView instanceof a)&&$.magnificPopup.close()}}),Extension=window.Extension||{},Extension.RelationalModel=Backbone.Model.extend({set:function(){return Backbone.Model.prototype.set.apply(this,arguments),_.isUndefined(this._initialAttributes)&&(this._initialAttributes=_(this.attributes).clone()),this},addReference:function(a,b,c,d){var e=_(b).extend(c),f=a.add([e],{merge:!0,parse:!0});if(_.isFunction(d)){var g=this;_(f).each(function(a){d.call(g,a)})}return f[0]},addReferences:function(a,b,c,d){var e=_(b).map(function(a){return _(a).extend(c)}),f=a.add(e,{merge:!0,parse:!0});if(_.isFunction(d)){var g=this;_(f).each(function(a){d.call(g,a)})}return new Backbone.Collection(f)},toJSON:function(){var a=function(b){return b instanceof Backbone.Collection?b.chain().map(a).reject(_.isUndefined).value():_.isObject(b)&&b.cid?b.id:b},b={};return _(this.attributes).each(function(c,d){b[d]=a(c)}),b},save:function(a,b,c){var d=this;if(c=c||{models:[]},_(c.models).contains(this))return $.Deferred().resolve();c.models.push(this);var e=[];_(this.attributes).each(function(a){a instanceof Backbone.Model?e.push(a):a instanceof Backbone.Collection&&(e=e.concat(a.models))});var f=_(e).filter(function(a){return a.hasUrl()&&a.isSyncable()});if(f.length<1)return this._save(a,b,c);if(!_(f).every(function(a){return a.isValid()}))return!1;var g=$.Deferred();return _(f).each(function(e){e.save(null,null,c).done(function(){f.pop(),f.length<1&&d._save(a,b,c).done(function(){g.resolve()})})}),g},_save:function(){var a=this,b=Backbone.Model.prototype.save.apply(this,arguments).done(function(){a._initialAttributes=_(a.attributes).clone()});return b},isVanilla:function(){return _(this._initialAttributes).isEqual(this.attributes)},isSyncable:function(){return this.isNew()||!this.isVanilla()},hasUrl:function(){var a=_.result(this,"urlRoot")||_.result(this.collection,"url");return!!a}}),Extension=window.Extension||{},Extension.SubCollection=Backbone.Collection.extend({constructor:function(a,b){b||(b={}),b.parent&&(this.parent=b.parent,this.model=this.parent.model,this.comparator=this.parent.comparator,this.on("add",function(a,b,c){this.parent.add(a,c)}),this.on("remove",function(a,b,c){this.parent.remove(a,c)}),this.on("reset",function(a,b){this.parent.reset(b)}),this.on("change",function(a){this.parent.get(a).set(a.toJSON())})),Backbone.Collection.apply(this,arguments)}}),App=window.App||new Extension.Application,App.module("Models",function(a){a.Message=Extension.RelationalModel.extend({})}),App=window.App||new Extension.Application,App.module("Collections",function(a){a.Messages=Backbone.Collection.extend({model:App.Models.Message,url:function(){return App.getParameter("api_base_url")+"/messages.json"}}),App.on("before:start",function(){App.messages=new App.Collections.Messages}),App.on("start",function(){App.messages.fetch()}),App.on("stop",function(){App.messages.reset()})}),App=window.App||new Extension.Application,App.module("Views",function(a){a.ChatRoomMessage=Marionette.ItemView.extend({template:"#chat-room-message-template",serializeData:function(){return{message:this.model}},modelEvents:{"change:text":"render"},tagName:"li"}),a.ChatRoom=Marionette.CompositeView.extend({template:"#chat-room-template",serializeData:function(){return{messages:this.collection}},childView:a.ChatRoomMessage,childViewContainer:"ul"})}),App=window.App||new Extension.Application,App.module("Views",function(a){a.Layout=Extension.LayoutView.extend({template:"#layout-template",events:{"click a[href]":"preventHashChange"},regions:{chatRoom:"#chat-room-region",messageForm:"#message-form-region"},onRender:function(){this.chatRoom.show(new App.Views.ChatRoom({collection:App.messages})),this.messageForm.show(new App.Views.MessageForm({model:new App.Models.Message}))}})}),App=window.App||new Extension.Application,App.module("Views",function(a){a.MessageForm=Marionette.ItemView.extend({template:"#message-form-template",serializeData:function(){return{message:this.model}},events:{"submit form":"onFormSubmit"},onFormSubmit:function(a){a.preventDefault();var b=this.$("form").serializeObject(),c=new App.Models.Message(b.message);c.set("created_at",new Date),App.messages.add(c),c.save(),this.render()}})}),App=window.App||new Extension.Application,$(function(){App.on("before:start",function(){App.setParameter("api_base_url","http://api-marionette.local/api")}),App.on("start",function(){App.layout=new App.Views.Layout({el:$(".backbone-container:first")}),App.layout.render()}),$.ajax({url:"dist/templates.html",dataType:"text"}).done(function(a){$(document.body).append(a),$.ajaxSetup({timeout:2e3,headers:{"X-Requested-With":"XMLHttpRequest"}}),App.start()})});
//# sourceMappingURL=main.min.js.map